(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{433:function(t,s,e){"use strict";e.r(s);var r=e(42),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-registry"}},[t._v("#")]),t._v(" Docker Registry")]),t._v(" "),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("p",[t._v("参考 "),e("RouterLink",{attrs:{to:"/lrew.html"}},[t._v("LREW")]),t._v(" 启用 "),e("code",[t._v("registry")]),t._v("。")],1),t._v(" "),e("p",[t._v("笔者以 "),e("code",[t._v("docker.t.khs1994.com")]),t._v(" 为 "),e("code",[t._v("Docker Registry")]),t._v(" 的地址，请读者根据实际替换为自己的地址。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 生成证书")]),t._v("\n$ ./lnmp-docker ssl-self docker.t.khs1994.com\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者放入你自己的证书 config/nginx/ssl")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker.t.khs1994.com.key")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker.t.khs1994.com.crt")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 生成密钥")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("username")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("password")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("root\n$ docker run --init --rm "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      --entrypoint htpasswd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      httpd:alpine "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n      -Bbn "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$password")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" config/nginx/auth/docker_registry.htpasswd\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部分 nginx 可能不能解密，你可以替换为下面的命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -mbn $username $password > config/nginx/auth/docker_registry.htpasswd")]),t._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" config/nginx/demo.config/docker-registry.config config/nginx/docker-registry.conf\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 编辑 config/nginx/registry.conf 文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 替换 REGISTRY_DOMAIN 为 docker.t.khs1994.com")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5. 编辑 docker registry 配置文件 config/registry/config.yml")]),t._v("\n")])])]),e("h2",{attrs:{id:"自签名证书"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自签名证书"}},[t._v("#")]),t._v(" 自签名证书")]),t._v(" "),e("ul",[e("li",[t._v("https://www.aidmin.cn/server/docker-registry-with-self-signed-ssl-certificate.html")]),t._v(" "),e("li",[t._v("https://docs.docker.com/registry/insecure/#use-self-signed-certificates")]),t._v(" "),e("li",[t._v("https://docs.docker.com/docker-for-windows/faqs/#how-do-i-add-custom-ca-certificates")]),t._v(" "),e("li",[t._v("https://docs.docker.com/docker-for-windows/#adding-tls-certificates")]),t._v(" "),e("li",[t._v("https://docs.docker.com/engine/security/certificates/")])]),t._v(" "),e("p",[t._v("如果你的证书为自签名证书")]),t._v(" "),e("p",[t._v("Linux 上将 CA 证书放入 "),e("code",[t._v("/etc/docker/certs.d/myregistrydomain.com:5000/ca.crt")]),t._v("(Docker 守护端所在主机)，在 Docker 桌面版(Windows、macOS)中放到 "),e("code",[t._v("~/.docker/certs.d/myregistrydomain.com:5000/ca.crt")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("若 registry 解析到 "),e("code",[t._v("127.0.0.0/8")]),t._v("，可能不需要配置。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("/etc/docker/certs.d/           "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Certificate directory\n└── localhost:5000             "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Hostname:port\n    ├── client.cert            "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Client certificate\n    ├── client.key             "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Client key\n    └── ca.crt                 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Certificate authority that signed\n                                 the registry certificate\n\n└── https.registry.domain.com  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-- Hostname without port\n    ├── client.cert\n    ├── client.key\n    └── ca.crt\n")])])]),e("p",[t._v("若启用了验证功能(密码登录)，可能仍然会 "),e("a",{attrs:{href:"https://docs.docker.com/registry/insecure/#troubleshoot-insecure-registry",target:"_blank",rel:"noopener noreferrer"}},[t._v("出现错误"),e("OutboundLink")],1),t._v("。这时 "),e("strong",[t._v("必须")]),t._v(" 将 CA 写入系统文件夹(Docker 守护端所在主机)。")]),t._v(" "),e("p",[e("strong",[t._v("Linux")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# centos")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" config/nginx/ssl/root-ca.crt /etc/pki/ca-trust/source/anchors/myregistrydomain.com.crt\n$ update-ca-trust\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" config/nginx/ssl/root-ca.crt /usr/local/share/ca-certificates/myregistrydomain.com.crt\n$ update-ca-certificates\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启 docker")]),t._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart docker\n")])])]),e("p",[e("strong",[t._v("Windows")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("https://docs.docker.com/registry/insecure/#windows")])]),t._v(" "),e("li",[e("p",[t._v("右键点击 CA 证书，选择 "),e("code",[t._v("安装证书")])])]),t._v(" "),e("li",[e("p",[t._v("Store location: local machine （"),e("code",[t._v("存储位置")]),t._v(" -> "),e("code",[t._v("本地计算机")]),t._v(" -> "),e("code",[t._v("下一步")]),t._v("）")])]),t._v(" "),e("li",[e("p",[t._v("Check place all certificates in the following store（选择 "),e("code",[t._v("将所有的证书都放入下列存储")]),t._v("）")])]),t._v(" "),e("li",[e("p",[t._v("Click Browser, and select Trusted Root Certificate Authorities（点击 "),e("code",[t._v("浏览")]),t._v("，选择 "),e("code",[t._v("受信任的根证书颁发机构")]),t._v("，点击 "),e("code",[t._v("确定")]),t._v("，下一步）")])]),t._v(" "),e("li",[e("p",[t._v("Click Finish (点击 "),e("code",[t._v("完成")]),t._v(")")])]),t._v(" "),e("li",[e("p",[t._v("重启 Docker")])]),t._v(" "),e("li",[e("p",[t._v("https://docs.microsoft.com/zh-cn/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc754841(v=ws.11)?redirectedfrom=MSDN")])])]),t._v(" "),e("p",[e("strong",[t._v("macOS")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ security add-trusted-cert -d -r trustRoot -k ~/Library/Keychains/login.keychain ca.crt\n")])])]),e("h2",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ ./lnmp-docker up\n")])])]),e("h2",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ docker login docker.t.khs1994.com\n\n$ docker pull alpine\n\n$ docker tag alpine docker.t.khs1994.com/alpine\n\n$ docker push docker.t.khs1994.com/alpine\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);