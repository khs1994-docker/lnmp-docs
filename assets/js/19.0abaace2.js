(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{373:function(s,e,a){"use strict";a.r(e);var t=a(42),v=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"命令行工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行工具"}},[s._v("#")]),s._v(" 命令行工具")]),s._v(" "),a("p",[s._v("为避免输入过多的命令，本项目提供了 "),a("strong",[s._v("命令行")]),s._v(" 工具 "),a("code",[s._v("lnmp-docker")]),s._v(" 来简化操作：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("各种场景和架构中一键启动")])]),s._v(" "),a("li",[a("p",[s._v("便捷生成 "),a("code",[s._v("NGINX")]),s._v(" "),a("code",[s._v("APACHE")]),s._v(" 配置文件")])])]),s._v(" "),a("h2",{attrs:{id:"与-docker-compose-命令保持一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-docker-compose-命令保持一致"}},[s._v("#")]),s._v(" 与 docker compose 命令保持一致")]),s._v(" "),a("p",[s._v("例如 "),a("code",[s._v("lnmp-docker up | down")]),s._v(" 对应着 "),a("code",[s._v("docker compose up | down")])]),s._v(" "),a("h2",{attrs:{id:"自定义-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义-cli"}},[s._v("#")]),s._v(" 自定义 CLI")]),s._v(" "),a("p",[s._v("可以在 "),a("code",[s._v("lnmp-docker-custom-script")]),s._v(" 或 "),a("code",[s._v("lnmp-docker-custom-script.ps1")]),s._v(" (Windows) 中编写自定义脚本。")]),s._v(" "),a("p",[a("strong",[s._v("例如：")]),s._v(" 你需要在执行 "),a("code",[s._v("lnmp-docker up")]),s._v(" 命令前执行一些操作那么可以编写 "),a("code",[s._v("__lnmp_custom_pre_up")]),s._v(" 函数，命令后执行一些操作那么可以编写 "),a("code",[s._v("__lnmp_custom_post_up")]),s._v(" 函数。")]),s._v(" "),a("h2",{attrs:{id:"命令行补全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行补全"}},[s._v("#")]),s._v(" 命令行补全")]),s._v(" "),a("p",[s._v("设置环境变量 "),a("code",[s._v("LNMP_PATH")]),s._v(" 为本项目的绝对路径(下面以 "),a("code",[s._v("/data/lnmp")]),s._v(" 为例，实际请替换为你自己的路径)，并加入到 "),a("code",[s._v("PATH")]),s._v("，这样你就可以在任意目录使用本项目的 CLI。")]),s._v(" "),a("h3",{attrs:{id:"_1-bash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-bash"}},[s._v("#")]),s._v(" 1. Bash")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" ~/.bash_profile\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LNMP_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/data/lnmp\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),s._v("/bin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n")])])]),a("h4",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),s._v("/scripts/cli/completion/bash/lnmp-docker /etc/bash_completion.d/lnmp-docker\n")])])]),a("h4",{attrs:{id:"macos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[s._v("#")]),s._v(" macOS")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),s._v("/scripts/cli/completion/bash/lnmp-docker /usr/local/etc/bash_completion.d/lnmp-docker\n")])])]),a("h3",{attrs:{id:"_2-fish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-fish"}},[s._v("#")]),s._v(" 2. fish")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -Ux LNMP_PATH /data/lnmp\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),s._v("/scripts/cli/completion/fish/lnmp-docker.fish ~/.config/fish/completions/\n")])])]),a("blockquote",[a("p",[s._v("删除环境变量 "),a("code",[s._v("$ set -Ue LNMP_PATH")])])]),s._v(" "),a("h3",{attrs:{id:"_3-zsh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-zsh"}},[s._v("#")]),s._v(" 3. zsh")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" ~/.zshrc\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LNMP_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/data/lnmp\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LNMP_PATH")]),s._v("/bin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n")])])]),a("h2",{attrs:{id:"原始命令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始命令详解"}},[s._v("#")]),s._v(" 原始命令详解")]),s._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),a("p",[s._v("请查看 "),a("RouterLink",{attrs:{to:"/init.html"}},[s._v("项目初始化过程")]),s._v("。")],1),s._v(" "),a("h3",{attrs:{id:"docker-compose-原始命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-原始命令"}},[s._v("#")]),s._v(" docker compose 原始命令")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("docker compose")]),s._v(" 来启动、停止、销毁容器的参数分别是 "),a("code",[s._v("up -d")]),s._v(" "),a("code",[s._v("stop")]),s._v(" "),a("code",[s._v("down")]),s._v("，通过 "),a("code",[s._v("-f")]),s._v(" 来加载 "),a("code",[s._v("docker-compose.yml")]),s._v(" (可以任意命名)，本项目的 CLI 就是对以上一些命令的封装。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[s._v("场景")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("CLI")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("原始命令")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("开发环境")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("$ ./lnmp-docker up")])]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("docker compose -f docker-lnmp.yml -f docker-lnmp.override.yml up -d")])])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("生产环境")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("$ ./lnmp-docker swarm-deploy")])]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[s._v("docker stack -c docker-production.yml lnmp")])])])])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("docker-lnmp.override.yaml")]),s._v(" 是为了重写 "),a("code",[s._v("docker-lnmp.yaml")]),s._v("，执行 "),a("code",[s._v("docker compose up -d")]),s._v(" 会默认加载该文件。")])]),s._v(" "),a("p",[s._v("你可以使用 "),a("code",[s._v("config")]),s._v(" 命令查看最终的 "),a("code",[s._v("docker compose")]),s._v(" 配置文件。")]),s._v(" "),a("h3",{attrs:{id:"使用-docker-compose-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-compose-命令"}},[s._v("#")]),s._v(" 使用 docker compose 命令")]),s._v(" "),a("blockquote",[a("p",[s._v("我就是不想使用你提供的 "),a("code",[s._v("lnmp-docker")]),s._v(" "),a("code",[s._v("CLI")]),s._v("，我就要使用 "),a("code",[s._v("docker compose")]),s._v(" 命令，怎们办？")])]),s._v(" "),a("p",[s._v("本项目支持生成标准的 "),a("code",[s._v("docker-compose.yml")]),s._v(" 文件，执行以下命令即可。")]),s._v(" "),a("p",[a("strong",[s._v("注意: 每次修改 .env 文件，必须重新执行此命令")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ ./lnmp-docker config "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" docker-compose.yml\n")])])]),a("p",[s._v("之后就可以使用 "),a("code",[s._v("docker compose")]),s._v(" 命令")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ docker compose up -d "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("./lnmp-docker services"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n$ docker compose down\n")])])]),a("h3",{attrs:{id:"根据环境的不同使用不同的-env-lnmp-env-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据环境的不同使用不同的-env-lnmp-env-文件"}},[s._v("#")]),s._v(" 根据环境的不同使用不同的 "),a("code",[s._v(".env.${LNMP_ENV}")]),s._v(" 文件")]),s._v(" "),a("blockquote",[a("p",[s._v("原理：使用 compose 1.25.0 新增的 "),a("code",[s._v("--env-file PATH")]),s._v(" 选项")])]),s._v(" "),a("p",[s._v("假设你需要在 "),a("code",[s._v("development（开发）")]),s._v(" "),a("code",[s._v("production（生产）")]),s._v(" 两个环境中使用本项目")]),s._v(" "),a("p",[s._v("那么在 "),a("code",[s._v("development")]),s._v(" 环境中，新增 "),a("code",[s._v(".env.development")]),s._v(" 文件（内容参照 "),a("code",[s._v(".env.example")]),s._v("）,并设置环境变量 "),a("code",[s._v("LNMP_ENV=development")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LNMP_ENV")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("development\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# windows powershell")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# $env:LNMP_ENV="development"')]),s._v("\n\n$ ./lnmp-docker\n")])])]),a("p",[a("code",[s._v("production")]),s._v(" 环境同理，不再赘述。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意，本项目不会自动生成 "),a("code",[s._v(".env.${LNMP_ENV}")]),s._v(" 文件，如果找不到 "),a("code",[s._v(".env.${LNMP_ENV}")]),s._v(" 文件，将使用 "),a("code",[s._v(".env")]),s._v(" 文件。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);