(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{210:function(a,e,s){"use strict";s.r(e);var t=s(0),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"使用自己构建的镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用自己构建的镜像"}},[a._v("#")]),a._v(" 使用自己构建的镜像")]),a._v(" "),s("p",[s("code",[a._v(".env")]),a._v(" 文件更改以下变量")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LNMP_BUILD_DOCKER_IMAGE_PREFIX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("username\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" dockerfile/SOFT_NAME\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" example.Dockerfile Dockerfile\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 编辑 Dockerfile")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" Dockerfile\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 构建镜像")]),a._v("\n$ lnmp-docker build\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动")]),a._v("\n$ lnmp-docker build-up\n")])])]),s("h2",{attrs:{id:"部分服务使用自己镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部分服务使用自己镜像"}},[a._v("#")]),a._v(" 部分服务使用自己镜像")]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("docker-lnmp.include.yml")]),a._v(" 文件中重写对应服务的 "),s("code",[a._v("image")]),a._v(" 指令。")])])}),[],!1,null,null,null);e.default=n.exports}}]);