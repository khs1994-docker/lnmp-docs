(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{344:function(t,s,n){"use strict";n.r(s);var a=n(33),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"【玩转腾讯云】在-coding-devops-持续集成中使用-buildx-构建-docker-镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#【玩转腾讯云】在-coding-devops-持续集成中使用-buildx-构建-docker-镜像"}},[t._v("#")]),t._v(" 【玩转腾讯云】在 CODING DevOps 持续集成中使用 Buildx 构建 Docker 镜像")]),t._v(" "),n("p",[t._v("现在容器化技术快速发展，Docker 镜像作为其基石，构建镜像的技术也在快速演进，去年 Docker 推出的 "),n("a",{attrs:{href:"https://github.com/moby/buildkit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Buildkit"),n("OutboundLink")],1),t._v(" 技术试图去解决传统构建镜像过程中所存在的问题：")]),t._v(" "),n("ul",[n("li",[t._v("多系统、架构的 Docker 镜像难以统一")]),t._v(" "),n("li",[t._v("构建过程难以缓存")])]),t._v(" "),n("p",[t._v("为解决以上问题，基于 "),n("code",[t._v("buildkit")]),t._v(" 的 Docker CLI 插件 "),n("a",{attrs:{href:"https://github.com/docker/buildx",target:"_blank",rel:"noopener noreferrer"}},[t._v("buildx"),n("OutboundLink")],1),t._v(" 引入了 "),n("code",[t._v("--platform")]),t._v(" "),n("code",[t._v("--cache-from")]),t._v(" "),n("code",[t._v("--cache-to")]),t._v(" 等参数，下面开始介绍如何在 CODING DevOps 持续集成中使用 Buildx 构建 Docker 镜像。")]),t._v(" "),n("h2",{attrs:{id:"登录或者注册-coding-devops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#登录或者注册-coding-devops"}},[t._v("#")]),t._v(" 登录或者注册 CODING DevOps")]),t._v(" "),n("ul",[n("li",[t._v("https://cloud.tencent.com/product/coding")])]),t._v(" "),n("h2",{attrs:{id:"创建项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[t._v("#")]),t._v(" 创建项目")]),t._v(" "),n("p",[t._v("登录之后，点击右上角项目（第三个图标）-> 创建项目 -> 模板选择 "),n("strong",[t._v("DevOps 项目")])]),t._v(" "),n("p",[n("strong",[t._v("项目名称")])]),t._v(" "),n("p",[t._v("自己填入一个名称")]),t._v(" "),n("p",[t._v("其他选项可以不填，点击完成创建")]),t._v(" "),n("h2",{attrs:{id:"新建-dockerfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新建-dockerfile"}},[t._v("#")]),t._v(" 新建 Dockerfile")]),t._v(" "),n("p",[t._v("选择 "),n("strong",[t._v("代码仓库")]),t._v(" -> "),n("strong",[t._v("快速初始化仓库")]),t._v(" -> 勾选 "),n("code",[t._v("启用README.md文件初始化仓库")]),t._v(" -> 点击 "),n("code",[t._v("快速初始化按钮")])]),t._v(" "),n("p",[t._v("点击 "),n("code",[t._v("右上角三个点")]),t._v(" -> "),n("code",[t._v("新建")]),t._v(" -> "),n("code",[t._v("文件")]),t._v(" -> 输入 "),n("code",[t._v("Dockerfile")]),t._v(" -> 点击 "),n("code",[t._v("创建")])]),t._v(" "),n("p",[n("strong",[t._v("写入以下内容")])]),t._v(" "),n("div",{staticClass:"language-docker extra-class"},[n("pre",{pre:!0,attrs:{class:"language-docker"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" alpine\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" set "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x \\\n    && sed "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g"')]),t._v(" /etc/apk/repositories \\\n    && apk add "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache curl git gcc\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" GIT_COMMIT="),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unknow"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LABEL")]),t._v(" org.opencontainers.image.revision=$GIT_COMMIT\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uname"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("p",[n("strong",[t._v("点击提交")])]),t._v(" "),n("h2",{attrs:{id:"启用持续集成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启用持续集成"}},[t._v("#")]),t._v(" 启用持续集成")]),t._v(" "),n("p",[t._v("选择 "),n("strong",[t._v("持续集成")]),t._v(" -> "),n("code",[t._v("构建计划")]),t._v(" -> "),n("code",[t._v("创建持续集成任务(新建构建计划配置)")]),t._v(" -> 输入 "),n("code",[t._v("计划名称")]),t._v(" -> 选择 "),n("code",[t._v("使用静态配置的 Jenkinsfile")]),t._v(" -> 选择 "),n("code",[t._v("简易模板")]),t._v(" -> 点击 "),n("code",[t._v("确定")])]),t._v(" "),n("p",[t._v("001.jpg")]),t._v(" "),n("p",[t._v("CODING DevOps 持续集成使用的是 "),n("code",[t._v("Jenkis")]),t._v("，通过 "),n("code",[t._v("Jenkinsfile")]),t._v(" 进行配置。")]),t._v(" "),n("p",[t._v("点击 "),n("code",[t._v("流程配置")]),t._v(" -> "),n("code",[t._v("文本编辑器")]),t._v(" -> 输入以下内容(搜素 "),n("code",[t._v("fix me")]),t._v(" 替换为自己的内容)-> 点击 "),n("code",[t._v("保存")])]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[t._v("pipeline "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  agent any\n  environment "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLATFORM = ")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linux/amd64,linux/arm64,linux/arm/v7"')]),t._v("\n    PLATFORM = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linux/amd64"')]),t._v("\n    DOCKER_PASSWORD = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${env.DOCKER_PASSWORD}"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fix me")]),t._v("\n    DOCKER_USERNAME = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_username"')]),t._v("\n    DOCKER_CLI_EXPERIMENTAL = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enabled"')]),t._v("\n    BUILDX_IMAGE= "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dockerpracticesig/buildkit:master-tencent"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fix me 这里使用腾讯云容器服务的 Docker 仓库 https://cloud.tencent.com/product/tke")]),t._v("\n    DOCKER_REGISTRY= "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccr.ccs.tencentyun.com"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fix me")]),t._v("\n    DOCKER_REPO_NAMESPACE= "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_namespace"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  stages "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stage('检出') "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        checkout("),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$class"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 'GitSCM'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" branches"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" env.GIT_BUILD_REF"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        userRemoteConfigs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" env.GIT_REPO_URL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" credentialsId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" env.CREDENTIALS_ID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(")\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    stage('update docker to latest')"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker version"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker info"')]),t._v("\n\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl -fsSL https://mirrors.cloud.tencent.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sudo add-apt-repository \\"deb [arch=amd64] https://mirrors.cloud.tencent.com/docker-ce/linux/ubuntu \\$(lsb_release -cs) stable\\""')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sudo apt update"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sudo apt install docker-ce docker-ce-cli containerd.io -y"')]),t._v("\n\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker version"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker info"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    stage('setup-buildx')"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker run --rm --privileged tonistiigi/binfmt:latest --install all | true"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker buildx create --use --name mybuilder --driver-opt image=${BUILDX_IMAGE}"')]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker buildx ls"')]),t._v("\n\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker buildx inspect --bootstrap"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    stage('登录仓库') "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin ${DOCKER_REGISTRY}"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    stage('构建镜像') "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker build -t ${DOCKER_REGISTRY}/${DOCKER_REPO_NAMESPACE}/demo --build-arg GIT_COMMIT ."')]),t._v("\n\n        sh "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker push ${DOCKER_REGISTRY}/${DOCKER_REPO_NAMESPACE}/demo"')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    stage('构建镜像-buildx') "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      steps "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n        sh "docker buildx build \\\n            -t $'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("DOCKER_REGISTRY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("DOCKER_REPO_NAMESPACE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/demo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("buildx \\\n            --platform linux/amd"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v(" \\\n            \\$(if "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -f '/root/docker_build_cache/index.json' "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(";then \\\n                  echo ' --cache-from=type=local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("src=/root/docker_build_cache '; \\\n               fi) \\\n            --cache-to=type=local"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v('dest=/root/docker_build_cache \\\n            --build-arg GIT_COMMIT \\\n            --push ."\n      '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("002.jpg")]),t._v(" "),n("p",[t._v("新增 "),n("strong",[t._v("环境变量")])]),t._v(" "),n("p",[t._v("环境变量可以存储 Docker Registry 密码等私密内容。")]),t._v(" "),n("p",[t._v("选择 "),n("code",[t._v("变量与缓存")]),t._v(" -> "),n("code",[t._v("流程环境变量")]),t._v(" -> "),n("code",[t._v("添加环境变量")])]),t._v(" "),n("p",[t._v("变量名称 "),n("code",[t._v("DOCKER_PASSWORD")]),t._v("，默认值填为你自己的 Docker Registry 密码，勾选 "),n("code",[t._v("保密")]),t._v(" ->点击确定")]),t._v(" "),n("p",[t._v("003.jpg")]),t._v(" "),n("p",[t._v("设置 "),n("strong",[t._v("构建缓存")])]),t._v(" "),n("p",[t._v("选择 "),n("code",[t._v("变量与缓存")]),t._v(" -> "),n("code",[t._v("缓存目录")]),t._v(" -> 输入 "),n("code",[t._v("/root/docker_build_cache")]),t._v(" -> 点击 "),n("code",[t._v("保存修改")])]),t._v(" "),n("p",[t._v("点击 "),n("code",[t._v("返回")]),t._v(" -> 点击 "),n("code",[t._v("立即构建")])]),t._v(" "),n("h2",{attrs:{id:"查看结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看结果"}},[t._v("#")]),t._v(" 查看结果")]),t._v(" "),n("p",[t._v("点击构建列表 -> 在构建过程中点击各个步骤即可查看到构建输出")]),t._v(" "),n("p",[t._v("可以对比 "),n("code",[t._v("构建镜像")]),t._v(" "),n("code",[t._v("构建镜像-buildx")]),t._v(" 的执行时间，发现第一次构建两者所用时间相差不大，之后的每次构建 "),n("code",[t._v("构建镜像-buildx")]),t._v(" 所用的时间较短（30s vs 8s）。")]),t._v(" "),n("h2",{attrs:{id:"结语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),n("p",[t._v("免费版本的 CODING DevOps 提供了 "),n("code",[t._v("200次/每周")]),t._v(" "),n("code",[t._v("30分钟/次")]),t._v(" 的配额。")]),t._v(" "),n("p",[t._v("由于国内访问 Docker Hub 较缓慢，以上用到的 Docker 仓库替换为了腾讯云容器服务提供的 Docker 仓库，创建 "),n("code",[t._v("Buildx")]),t._v(" 实例的 "),n("code",[t._v("Buildkit")]),t._v(" 镜像使用了替换镜像源为腾讯云的 "),n("code",[t._v("dockerpracticesig/buildkit:master-tencent")]),t._v("。")]),t._v(" "),n("p",[t._v("可以发现使用 "),n("code",[t._v("buildx")]),t._v(" 构建镜像具有诸多优点，而传统的 Docker 镜像仓库不提供 "),n("code",[t._v("buildx")]),t._v(" 构建，那么使用 CODING DevOps 构建镜像并推送到仓库中是一个不错的选择。")])])}),[],!1,null,null,null);s.default=e.exports}}]);